version: '3.8'

services:
  web:
    image: docker-tut-web:latest
    #stdin_open: true # docker run -i
    #tty: true        # docker run -t
    #build: ./app
    build:
      context: ./app
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      #- ./app/:/usr/src/app/
      - ./app/media:/usr/src/app/media
      - $SSH_AUTH_SOCK:/ssh-agent # Forward local machine SSH key to docker
    ports:
      - 8001:8000
    env_file:
      - ./app/.env
    restart: 'no' # always|unless-stopped
    environment:
      - SSH_AUTH_SOCK=/ssh-agent
    networks: 
      - app_network
    depends_on:
      - db
  db:
    #image: postgres:15
    image: postgis/postgis:15-3.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - $SSH_AUTH_SOCK:/ssh-agent # Forward local machine SSH key to docker
    environment:
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=dev123
      - POSTGRES_DB=hello_django_dev
      - POSTGRES_EXTENSIONS=postgis

      - SSH_AUTH_SOCK=/ssh-agent
      # psql -h db -U dev -d hello_django_dev
    networks: 
      - app_network
  nginx:
    container_name: nginx
    image: nginx-base:latest
    network_mode: host
    build:
      context: ./nginx
      dockerfile: Dockerfile
    #ports:
    #  - 8001:80
#  moon:
#    container_name: moon 
#    image: busybox 
#    command: sleep infinity
#    networks:
#      - earth

volumes:
  postgres_data:

# https://medium.com/@kesaralive/diving-deeper-into-docker-networking-with-docker-compose-737e3b8a3c8c
networks:
  app_network:
    name: app_network
    driver: bridge
  earth:
    name: earth 
    driver: bridge
